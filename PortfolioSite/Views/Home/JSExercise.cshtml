@{
    ViewBag.Title = "JSExercise";
}

<div class="container">
    <h2>JS Exercises</h2>
    <div class="row well">
        <div class="row well">
            <h4>jQuery Calculator</h4>
            <div class="col-lg-2">
            </div>
            <div class="col-lg-8 well">
                <h4><strong>Display:</strong></h4><br />
                <table class="table table-bordered">
                    <tr>
                        <th>
                            <p id="calculatorDisplay">0</p>
                        </th>
                    </tr>
                </table>
                <table class="table table-bordered">
                    <tr>
                        <td></td>
                        <td>
                            <button id="squareRoot" class="btn-block" style="border-color:#00e600">&radic;</button>
                        </td>
                        <td>
                            <button id="squareOf" class="btn-block" style="border-color:#00e600"><i>x<sup>2</sup></i></button>
                        </td>
                        <td>
                            <button id="oneOverVal" class="btn-block" style="border-color:#00e600"><sup>1</sup>/<i>x</i></button>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <button id="clear" class="btn-block" style="border-color:greenyellow">C</button>
                        </td>
                        <td>
                            <button id="backspace" class="btn-block" style="border-color:#00e600">&larr;</button>
                        </td>
                        <td>
                            <button id="divideBy" class="btn-block" style="border-color:#ff4d4d">/</button>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <button id="seven" class="btn-block" style="border-color:blue">7</button>

                        </td>
                        <td>
                            <button id="eight" class="btn-block" style="border-color:blue">8</button>

                        </td>
                        <td>
                            <button id="nine" class="btn-block" style="border-color:blue">9</button>

                        </td>
                        <td>
                            <button id="multiplyBy" class="btn-block" style="border-color:#ff4d4d">X</button>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <button id="four" class="btn-block" style="border-color:blue">4</button>

                        </td>
                        <td>
                            <button id="five" class="btn-block" style="border-color:blue">5</button>

                        </td>
                        <td>
                            <button id="six" class="btn-block" style="border-color:blue">6</button>

                        </td>
                        <td>
                            <button id="subtractBy" class="btn-block" style="border-color:#ff4d4d">-</button>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <button id="one" class="btn-block" style="border-color:blue">1</button>

                        </td>
                        <td>
                            <button id="two" class="btn-block" style="border-color:blue">2</button>

                        </td>
                        <td>
                            <button id="three" class="btn-block" style="border-color:blue">3</button>

                        </td>
                        <td>
                            <button id="addTo" class="btn-block" style="border-color:#ff4d4d">+</button>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <button id="flipSign" class="btn-block" style="border-color:#00e600">&plusmn;</button>

                        </td>
                        <td>
                            <button id="zero" class="btn-block" style="border-color:blue">0</button>

                        </td>
                        <td>
                            <button id="deci" class="btn-block" style="border-color:blue">.</button>

                        </td>
                        <td>
                            <button id="equals" class="btn-block" style="border-color:orangered">=</button>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="col-lg-2">
            </div>
        </div>
    </div>
    <div class="row well">
        <h5>General FizzBuzzer</h5>
        <div class="col-lg-12 well">
            <h6>Enter 2 numbers to fizz on multiples of the first and buzz on multiples of the second from 0 to 100.</h6>
            <input type="number" id="fbStarting" placeholder="Enter starting number..." /><br /><br />
            <input type="number" id="fbEnding" placeholder="Enter ending number..." /><br />
            <button id="generalFizzBuzz">Display</button><br />
            <p>Result: <label id="fbResult"></label></p>
        </div>
    </div>
    <div class="row well">
        <h5>Palindrome Detector</h5>
        <div class="col-lg-12 well">
            <h6>Enter a word to determine whether it is a palindrome.</h6>
            <input type="text" id="palindromeSource" placeholder="Enter your word here..." />
            <button id="palindromeChecker">Check for palindromes</button><br />
            <p>Result: <label id="palindromeResult"></label></p>
        </div>
    </div>
    <div class="row well">
        <h5>String component finder</h5>
        <div class="col-lg-12 well">
            <h6>Enter a word to receive all combinations of letters of that word.</h6>
            <input type="text" id="sfSource" placeholder="Enter your word here..." />
            <button id="stringFactorializerButton">Produce word component combos</button><br />
            <p>Result: <label id="sfResult"></label></p>
        </div>
    </div>
    <div class="row well">
        <h5>String alphabetizer</h5>
        <div class="col-lg-12 well">
            <h6>Enter a string to get it alphabetized.</h6>
            <input type="text" id="alphabetizerSource" placeholder="Enter your word here..." />
            <button id="stringAlphabetizerButton">Alphabetize strings</button><br />
            <p>Result: <label id="alphabetizerResult"></label></p>
        </div>
    </div>
    <div class="row well">
        <h5>Word capitalizer</h5>
        <div class="col-lg-12 well">
            <h6>Enter a series of words to capitalize the first letter of each word.</h6>
            <input type="text" id="capitalizerSource" placeholder="Enter your sentence here..." maxlength="140" style="width:450px" />
            <button id="sentenceComponentCapitalizer">Capitalize words</button><br />
            <p>Result: <label id="capitalizerResult"></label></p>
        </div>
    </div>
    <div class="row well">
        <h5>String content assessor</h5>
        <div class="col-lg-12 well">
            <h6>Enter a string of characters to find the first non-repeated character.</h6>
            <input type="text" id="stringAssessorSource" placeholder="Enter your string here..." maxlength="140" />
            <button id="stringContentAssessor">Assess string content</button><br />
            <p>Result: <label id="stringAssessorResult"></label></p>
            <p>All unique characters: <label id="uniqueStringAssessorResult"></label></p>
        </div>
    </div>
    <div class="row well">
        <h5>Random string generator</h5>
        <div class="col-lg-12 well">
            <h6>Enter the desired length of your randomly generated string.</h6>
            <input type="number" id="targetLength" placeholder="Enter the desired length here..." style="width:450px" />
            <button id="randomStringCreator">Get random string</button><br />
            <p>Result: <label id="generatorResult"></label></p>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
<script>
    $(document).ready(() => {

        //Calculator code
        let workingVal = '0';
        let lastVal = 0, resultVal = 0;
        let chainArith = false;
        let equalsFunc = function () { };

        function updateDisplay(txt) {
            $('#calculatorDisplay').text(txt);
        }

        function clearDisplay() {
            workingVal = '0';
            $('#calculatorDisplay').text('0');
        }

        function addDoer(a, b) {
            return a + b;
        }

        function subtractDoer(a, b) {
            return a - b;
        }

        function multiplicationDoer(a, b) {
            return a * b;
        }

        function divisionDoer(a, b) {
            return a / b;
        }

        $('#clear').click(() => {
            lastVal = 0;
            clearDisplay();
        });

        $('#backspace').click(() => {
            let wArray = workingVal.split('');
            wArray = wArray.slice(0, wArray.length - 1);
            if (wArray.length > 0) {
                workingVal = wArray.join('');
            }
            else workingVal = '0';
            updateDisplay(workingVal);
        });

        $('#flipSign').click(() => {
            let wNumber = parseFloat(workingVal);
            wNumber = -1 * wNumber;
            workingVal = wNumber.toString();
            updateDisplay(workingVal);
        });

        $('#squareRoot').click(() => {
            let wNumber = parseFloat(workingVal);
            wNumber = Math.sqrt(wNumber);
            workingVal = wNumber.toString();
            updateDisplay(workingVal);
        });

        $('#squareOf').click(() => {
            let wNumber = parseFloat(workingVal);
            wNumber = wNumber * wNumber;
            workingVal = wNumber.toString();
            updateDisplay(workingVal);
        });

        $('#oneOverVal').click(() => {
            let wNumber = parseFloat(workingVal);
            wNumber = 1 / wNumber;
            workingVal = wNumber.toString();
            updateDisplay(workingVal);
        });

        $('#divideBy').click(() => {
            if (chainArith == false) {
                lastVal = parseFloat(workingVal);
                equalsFunc = divisionDoer;
                clearDisplay();
                chainArith = true;
            }
            else lastVal = equalsFunc(lastVal, parseInt(workingVal));
            equalsFunc = divisionDoer;
            clearDisplay();
        });

        $('#multiplyBy').click(() => {
            if (chainArith == false) {
                lastVal = parseFloat(workingVal);
                equalsFunc = multiplicationDoer;
                clearDisplay();
                chainArith = true;
            }
            else lastVal = equalsFunc(lastVal, parseInt(workingVal));
            equalsFunc = multiplicationDoer;
            clearDisplay();
        });

        $('#subtractBy').click(() => {
            if (chainArith == false) {
                lastVal = parseFloat(workingVal);
                equalsFunc = subtractDoer;
                clearDisplay();
                chainArith = true;
            }
            else lastVal = equalsFunc(lastVal, parseInt(workingVal));
            equalsFunc = multiplicationDoer;
            clearDisplay();
        });

        $('#addTo').click(() => {
            if (chainArith == false) {
                lastVal = parseFloat(workingVal);
                equalsFunc = addDoer;
                clearDisplay();
                chainArith = true;
            }
            else lastVal = equalsFunc(lastVal, parseInt(workingVal));
            equalsFunc = addDoer;
            clearDisplay();

        });

        $('#equals').click(() => {
            resultVal = equalsFunc(lastVal, parseInt(workingVal));
            lastVal = resultVal;
            workingVal = resultVal;
            updateDisplay(resultVal.toString());
            chainArith = false;
        });

        $('#one').click(() => {
            workingVal += '1';
            updateDisplay(workingVal);
        });

        $('#two').click(() => {
            workingVal += '2';
            updateDisplay(workingVal);
        });

        $('#three').click(() => {
            workingVal += '3';
            updateDisplay(workingVal);
        });

        $('#four').click(() => {
            workingVal += '4';
            updateDisplay(workingVal);
        });

        $('#five').click(() => {
            workingVal += '5';
            updateDisplay(workingVal);
        });

        $('#six').click(() => {
            workingVal += '6';
            updateDisplay(workingVal);
        });

        $('#seven').click(() => {
            workingVal += '7';
            updateDisplay(workingVal);
        });

        $('#eight').click(() => {
            workingVal += '8';
            updateDisplay(workingVal);
        });

        $('#nine').click(() => {
            workingVal += '9';
            updateDisplay(workingVal);
        });

        $('#zero').click(() => {
            workingVal += '0';
            updateDisplay(workingVal);
        });

        $('#deci').click(() => {
            workingVal += '.';
            updateDisplay(workingVal);
        });

        $('#generalFizzBuzz').on('click', () => {
            const $firstNum = Number($("#fbStarting").val());
            const $secondNum = Number($("#fbEnding").val());
            let $retString = $("#fbResult");

            if (($firstNum > 100 || $firstNum < 0) || ($secondNum > 100 || $secondNum < 0)) {
                retString.textContent = "Please enter values between 0 and 100 for both numbers.";
            }
            else $retString.text(fizzBuzz($firstNum, $secondNum));

            function fizzBuzz(a, b) {
                let resultString = "";
                for (i = 1; i <= 100; i++) {
                    if (i < 100) {
                        (i % a === 0 && i % b === 0) ? resultString += "FizzBuzz, " : ((i % a === 0) ? resultString += "Fizz, " : ((i % b === 0) ? resultString += "Buzz, " : resultString += i + ", "));
                    }
                    else (i % a === 0 && i % b === 0) ? resultString += "FizzBuzz." : ((i % a === 0) ? resultString += "Fizz." : ((i % b === 0) ? resultString += "Buzz." : resultString += i + "."));
                }
                return resultString;
            }
        });

        $('#palindromeChecker').click(() => {
            const $srcWord = $("#palindromeSource").val().toLowerCase();
            let intermediateArray = [];
            let flipSrc = "";

            for (i = $srcWord.length - 1; i >= 0; i--) {
                intermediateArray.push($srcWord.charAt(i));
            }

            flipSrc = intermediateArray.join('');

            if ($srcWord == flipSrc) {
                $('#palindromeResult').text("Yup, its a palindrome.");
            }

            else {
                $('#palindromeResult').text("Sorry, no palindromes here.");
            }
        });

        $('#stringFactorializerButton').click(() => {
            const $srcWord = $('#sfSource').val().toLowerCase();
            let intermediateArray = [], resultArray = [];

            for (i = 0; i < $srcWord.length; i++) {
                for (j = i; j < $srcWord.length; j++) {
                    for (k = i; k <= j; k++) {
                        intermediateArray.push($srcWord.charAt(k));
                    }
                    resultArray.push(intermediateArray.join(''));
                    intermediateArray = [];
                }
            }
            $('#sfResult').text(resultArray.join(', '));
        });

        $('#stringAlphabetizerButton').on('click', () => {
            const $srcWord = $('#alphabetizerSource').val().toLowerCase();
            let intermediateArray = [];

            for (i = 0; i < $srcWord.length; i++) {
                intermediateArray.push($srcWord.charAt(i));
            }

            $('#alphabetizerResult').text(selectionSort(intermediateArray).join(''));

            function selectionSort(arr) {
                let tmp = [], smallest = 0;
                for (i = 0; i < arr.length; i++) {
                    smallest = i;
                    for (j = i + 1; j < arr.length; j++) {
                        if (arr[j] < arr[smallest]) {
                            smallest = j;
                        }
                    }
                    tmp = arr[i];
                    arr[i] = arr[smallest];
                    arr[smallest] = tmp;
                }
                return arr;
            }
        });

        $('#sentenceComponentCapitalizer').on('click', () => {
            const $srcSentence = $('#capitalizerSource').val().toLowerCase();
            let upperArray = [], lowerArray = [], finalArray = [];
            let resultString = '';
            upperArray = $srcSentence.split(' ');

            for (i = 0; i < upperArray.length; i++) {
                lowerArray = upperArray[i].split('');
                for (j = 0; j < 1; j++) {
                    lowerArray[j] = lowerArray[j].toUpperCase();
                    finalArray.push(lowerArray.join(''));
                    lowerArray = [];
                }
            }
            resultString = finalArray.join(' ');
            $('#capitalizerResult').text(resultString);
        });

        $('#stringContentAssessor').on('click', () => {
            const $srcString = $('#stringAssessorSource').val().toLowerCase();
            let wArray = $srcString.split('');

            while (charMatchAssessor(wArray) == true) {
                wArray = filterMatchingChars(wArray);
            }


            if (wArray.length !==0){
                $('#stringAssessorResult').text(wArray[0]);
                $('#uniqueStringAssessorResult').text(wArray.join(', '));
            }else $('#stringAssessorResult').text("There are no unique characters in the string!");

            function charMatchAssessor(arr) {
                for (i = 0; i < arr.length; i++) {
                    for (k = i + 1; k < arr.length; k++) {
                        if (arr[i] == arr[k]) {
                            return true;
                        }
                    }
                }
            }

            function filterMatchingChars(arr) {
                for (i = 0; i < arr.length; i++) {
                    for (k = i + 1; k < arr.length; k++) {
                        if (arr[i] == arr[k]) {
                            return arr = arr.filter(char => char != arr[i]);
                        }
                    }
                }
            }
        });

        $('#randomStringCreator').on('click', () => {
            const $targetLength = $('#targetLength').val();
            const loadString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            let clipArray = [], resultArray = [];
            for (i = 0; i < loadString.length; i++) {
                clipArray.push(loadString.charAt(i));
            }

            for (i = 0; i < $targetLength; i++) {
                resultArray.push(clipArray[Math.floor(Math.random() * (clipArray.length))]);
            }

            $('#generatorResult').text(resultArray.join(''));
        });
    });
</script>
